/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import framework.Config;
import framework.Funcoes;
import framework.Log;
import controller.C_tabela;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.SwingWorker;
import model.ScrollBar;
import model.Tabela;

/**
 *
 * @author Z D K
 */
public class jInternal_tabela extends javax.swing.JInternalFrame {

    public C_tabela controller;
    public File file;

    //Variaveis de ação
    AtomicBoolean acao_line = new AtomicBoolean(true);

    /**
     * Creates new form jInternal_tabela
     *
     * @param file
     * @param config
     */
    public jInternal_tabela(File file, Config config) {
        this.file = file;

        initComponents();
        controller = new C_tabela(this, config);

        barra_titulo();
        edicao_celula();

        get_coluna_style(config);
    }

    void barra_titulo() {
        // Remove a barra de título, mas mantém a borda
        javax.swing.plaf.basic.BasicInternalFrameUI ui
                = (javax.swing.plaf.basic.BasicInternalFrameUI) getUI();
        ui.setNorthPane(null); // Remove a barra de título
        setBorder(javax.swing.BorderFactory.createEmptyBorder());
    }

    void edicao_celula() {
        // Remove o comportamento de edição com clique
        inews.setCellSelectionEnabled(true);
        inews.setSurrendersFocusOnKeystroke(true);
        inews.putClientProperty("JTable.autoStartsEdit", Boolean.FALSE);

// Define ação para iniciar edição ao pressionar Enter
        InputMap im = inews.getInputMap(JTable.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        ActionMap am = inews.getActionMap();

        // Substitui a ação de Enter para iniciar a edição manualmente
        im.put(KeyStroke.getKeyStroke("ENTER"), "startEdit");
        am.put("startEdit", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = inews.getSelectedRow();
                int col = inews.getSelectedColumn();
                if (row >= 0 && col >= 0 && inews.isCellEditable(row, col)) {
                    inews.editCellAt(row, col);
                    inews.requestFocusInWindow();
                    Component editor = inews.getEditorComponent();
                    if (editor != null) {
                        editor.requestFocusInWindow();
                    }
                }
            }
        });
    }

    void get_coluna_style(Config config) {
        String coluna_style = config.get("coluna_style");
        if (coluna_style.equals("LAST_COLUMN")) {
            inews.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        } else if (coluna_style.equals("OFF")) {
            inews.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_fundo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inews = new javax.swing.JTable();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        inews.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        inews.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        inews.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                inewsMouseDragged(evt);
            }
        });
        inews.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inewsMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inewsMouseReleased(evt);
            }
        });
        inews.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inewsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inewsKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(inews);
        jScrollPane1.getVerticalScrollBar().setUI(new ScrollBar());
        jScrollPane1.getHorizontalScrollBar().setUI(new ScrollBar());
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20); // scroll mais suave

        javax.swing.GroupLayout pn_fundoLayout = new javax.swing.GroupLayout(pn_fundo);
        pn_fundo.setLayout(pn_fundoLayout);
        pn_fundoLayout.setHorizontalGroup(
            pn_fundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
        );
        pn_fundoLayout.setVerticalGroup(
            pn_fundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_fundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pn_fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized

    private void inewsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inewsKeyPressed
        // TODO add your handling code here:
        if ("Formato.csv".equals(file.getName())) {
            Log.registrarErro_noEx("Tabela formato não permite Edição");
            return;
        }

        if (evt.getKeyCode() == KeyEvent.VK_INSERT) {
            controller.key_add_line_insert(inews, pn_fundo, acao_line);
        }

        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            controller.key_delete_line(inews, pn_fundo, acao_line);
        }

        if (evt.isAltDown() && evt.getKeyCode() == KeyEvent.VK_LEFT) {
            if (controller.lauda.ver_stts_lauda()) {
                controller.lauda.fechar_editor_lauda(inews, pn_fundo);
            }
            Funcoes.acao_com_trava(() -> {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                new SwingWorker<Void, Void>() {
                    @Override
                    protected Void doInBackground() throws Exception {
                        Thread.sleep(1000);
                        return null;
                    }

                    @Override
                    protected void done() {
                        // Após carregamento, reverter o cursor
                        try {
                            controller.lauda.lauda(inews, pn_fundo);
                            setCursor(Cursor.getDefaultCursor());
                            repaint();
                            Log.registrarErro_noEx("Lauda aberta");
                        } finally {
                            acao_line.set(true);
                        }

                    }
                }.execute();
            }, acao_line);

        }

        if (evt.isAltDown() && evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            if (controller.lauda.ver_stts_lauda()) {
                controller.lauda.fechar_editor_lauda(inews, pn_fundo);
            }
        }

        if (evt.getKeyCode() == KeyEvent.VK_F9 && evt.isControlDown()) {
            if (controller.arquivo_info.equals("Prelim") || controller.arquivo_info.equals("BO_CTL1") || controller.arquivo_info.equals("BO_CTL2")) {
                Funcoes.acao_com_trava(() -> {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    new SwingWorker<Void, Void>() {
                        @Override
                        protected Void doInBackground() throws Exception {
                            Thread.sleep(1000);
                            return null;
                        }

                        @Override
                        protected void done() {
                            // Após carregamento, reverter o cursor
                            try {
                                controller.prelim_to_final(inews, file);
                            } finally {
                                acao_line.set(true);
                            }

                        }
                    }.execute();
                }, acao_line);

            }

        }
    }//GEN-LAST:event_inewsKeyPressed

    private void inewsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inewsKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            controller.add_tempo_entrada(inews);
            controller.in_tMat(inews);

            Tabela.ajustarLarguraColuna(inews);
            Funcoes.acao_save_backup(inews, file, controller);

        }

    }//GEN-LAST:event_inewsKeyReleased

    private void inewsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inewsMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_inewsMouseReleased

    private void inewsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inewsMousePressed
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON1) {
            controller.updatePopupSelecao(inews);
        }
    }//GEN-LAST:event_inewsMousePressed

    private void inewsMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inewsMouseDragged
        // TODO add your handling code here:
        controller.updatePopupSelecao(inews);
    }//GEN-LAST:event_inewsMouseDragged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable inews;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel pn_fundo;
    // End of variables declaration//GEN-END:variables
}
